
// This file was automatically generated by the PetaPoco T4 Template
// Do not make changes directly to this file - edit the template instead
// 
// The following connection settings were used to generate this file
// 
//     Connection String Name: `Spatial`
//     Provider:               `System.Data.SqlClient`
//     Connection String:      `Data Source=.\SQLEXPRESS;Initial Catalog=Spatial;Integrated Security=true`
//     Schema:                 ``
//     Include Views:          `False`

using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using PetaPoco;

namespace Spatial
{
	public partial class SpatialDB : Database
	{
		public SpatialDB() 
			: base("Spatial")
		{
			CommonConstruct();
		}

		public SpatialDB(string connectionStringName) 
			: base(connectionStringName)
		{
			CommonConstruct();
		}
		
		partial void CommonConstruct();
		
		public interface IFactory
		{
			SpatialDB GetInstance();
		}
		
		public static IFactory Factory { get; set; }
        public static SpatialDB GetInstance()
        {
			if (_instance!=null)
				return _instance;
				
			if (Factory!=null)
				return Factory.GetInstance();
			else
				return new SpatialDB();
        }

		[ThreadStatic] static SpatialDB _instance;
		
		public override void OnBeginTransaction()
		{
			if (_instance==null)
				_instance=this;
		}
		
		public override void OnEndTransaction()
		{
			if (_instance==this)
				_instance=null;
		}
        
		public class Record<T> where T:new()
		{
			public static SpatialDB repo { get { return SpatialDB.GetInstance(); } }
			public bool IsNew() { return repo.IsNew(this); }
			public object Insert() { return repo.Insert(this); }
			public int Update(IEnumerable<string> columns) { return repo.Update(this, columns); }
			public static int Update(string sql, params object[] args) { return repo.Update<T>(sql, args); }
			public static int Update(Sql sql) { return repo.Update<T>(sql); }
			public int Delete() { return repo.Delete(this); }
			public static int Delete(string sql, params object[] args) { return repo.Delete<T>(sql, args); }
			public static int Delete(Sql sql) { return repo.Delete<T>(sql); }
			public static int Delete(object primaryKey) { return repo.Delete<T>(primaryKey); }
			public static bool Exists(object primaryKey) { return repo.Exists<T>(primaryKey); }
			public static T SingleOrDefault(object primaryKey) { return repo.SingleOrDefault<T>(primaryKey); }
			public static T SingleOrDefault(string sql, params object[] args) { return repo.SingleOrDefault<T>(sql, args); }
			public static T SingleOrDefault(Sql sql) { return repo.SingleOrDefault<T>(sql); }
			public static T FirstOrDefault(string sql, params object[] args) { return repo.FirstOrDefault<T>(sql, args); }
			public static T FirstOrDefault(Sql sql) { return repo.FirstOrDefault<T>(sql); }
			public static T Single(object primaryKey) { return repo.Single<T>(primaryKey); }
			public static T Single(string sql, params object[] args) { return repo.Single<T>(sql, args); }
			public static T Single(Sql sql) { return repo.Single<T>(sql); }
			public static T First(string sql, params object[] args) { return repo.First<T>(sql, args); }
			public static T First(Sql sql) { return repo.First<T>(sql); }
			public static List<T> Fetch(string sql, params object[] args) { return repo.Fetch<T>(sql, args); }
			public static List<T> Fetch(Sql sql) { return repo.Fetch<T>(sql); }
			public static List<T> Fetch(long page, long itemsPerPage, string sql, params object[] args) { return repo.Fetch<T>(page, itemsPerPage, sql, args); }
			public static List<T> Fetch(long page, long itemsPerPage, Sql sql) { return repo.Fetch<T>(page, itemsPerPage, sql); }
			public static List<T> SkipTake(long skip, long take, string sql, params object[] args) { return repo.SkipTake<T>(skip, take, sql, args); }
			public static List<T> SkipTake(long skip, long take, Sql sql) { return repo.SkipTake<T>(skip, take, sql); }
			public static Page<T> Page(long page, long itemsPerPage, string sql, params object[] args) { return repo.Page<T>(page, itemsPerPage, sql, args); }
			public static Page<T> Page(long page, long itemsPerPage, Sql sql) { return repo.Page<T>(page, itemsPerPage, sql); }
			public static IEnumerable<T> Query(string sql, params object[] args) { return repo.Query<T>(sql, args); }
			public static IEnumerable<T> Query(Sql sql) { return repo.Query<T>(sql); }
			
			private Dictionary<string,bool> ModifiedColumns;
			private void OnLoaded()
			{
				ModifiedColumns = new Dictionary<string,bool>();
			}
			protected void MarkColumnModified(string column_name)
			{
				if (ModifiedColumns!=null)
					ModifiedColumns[column_name]=true;
			}
			public int Update() 
			{ 
				if (ModifiedColumns==null)
					return repo.Update(this); 

				int retv = repo.Update(this, ModifiedColumns.Keys);
				ModifiedColumns.Clear();
				return retv;
			}
			public void Save() 
			{ 
				if (repo.IsNew(this))
					repo.Insert(this);
				else
					Update();
			}
		}
	}
	

    
	[TableName("VegasTransLines")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class VegasTransLine : SpatialDB.Record<VegasTransLine>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string NAME 
		{ 
			get
			{
				return _NAME;
			}
			set
			{
				_NAME = value;
				MarkColumnModified("NAME");
			}
		}
		string _NAME;

        [Column] 
		public string NAME0 
		{ 
			get
			{
				return _NAME0;
			}
			set
			{
				_NAME0 = value;
				MarkColumnModified("NAME0");
			}
		}
		string _NAME0;

        [Column] 
		public string OWNER2 
		{ 
			get
			{
				return _OWNER2;
			}
			set
			{
				_OWNER2 = value;
				MarkColumnModified("OWNER2");
			}
		}
		string _OWNER2;

        [Column] 
		public long? VOLTAGE_KV 
		{ 
			get
			{
				return _VOLTAGE_KV;
			}
			set
			{
				_VOLTAGE_KV = value;
				MarkColumnModified("VOLTAGE_KV");
			}
		}
		long? _VOLTAGE_KV;

        [Column] 
		public string CLASS_KV 
		{ 
			get
			{
				return _CLASS_KV;
			}
			set
			{
				_CLASS_KV = value;
				MarkColumnModified("CLASS_KV");
			}
		}
		string _CLASS_KV;

        [Column] 
		public long? OF_LINES 
		{ 
			get
			{
				return _OF_LINES;
			}
			set
			{
				_OF_LINES = value;
				MarkColumnModified("OF_LINES");
			}
		}
		long? _OF_LINES;

        [Column] 
		public string PROPOSED 
		{ 
			get
			{
				return _PROPOSED;
			}
			set
			{
				_PROPOSED = value;
				MarkColumnModified("PROPOSED");
			}
		}
		string _PROPOSED;

        [Column] 
		public string UNDERGROUN 
		{ 
			get
			{
				return _UNDERGROUN;
			}
			set
			{
				_UNDERGROUN = value;
				MarkColumnModified("UNDERGROUN");
			}
		}
		string _UNDERGROUN;

        [Column] 
		public string FROM_SUB 
		{ 
			get
			{
				return _FROM_SUB;
			}
			set
			{
				_FROM_SUB = value;
				MarkColumnModified("FROM_SUB");
			}
		}
		string _FROM_SUB;

        [Column] 
		public string TO_SUB 
		{ 
			get
			{
				return _TO_SUB;
			}
			set
			{
				_TO_SUB = value;
				MarkColumnModified("TO_SUB");
			}
		}
		string _TO_SUB;

        [Column] 
		public string NOTES 
		{ 
			get
			{
				return _NOTES;
			}
			set
			{
				_NOTES = value;
				MarkColumnModified("NOTES");
			}
		}
		string _NOTES;

        [Column] 
		public double? LENGTH_MI 
		{ 
			get
			{
				return _LENGTH_MI;
			}
			set
			{
				_LENGTH_MI = value;
				MarkColumnModified("LENGTH_MI");
			}
		}
		double? _LENGTH_MI;

        [Column] 
		public string CODE 
		{ 
			get
			{
				return _CODE;
			}
			set
			{
				_CODE = value;
				MarkColumnModified("CODE");
			}
		}
		string _CODE;

        [Column] 
		public string SOURCE 
		{ 
			get
			{
				return _SOURCE;
			}
			set
			{
				_SOURCE = value;
				MarkColumnModified("SOURCE");
			}
		}
		string _SOURCE;

        [Column] 
		public string VOLTAGES 
		{ 
			get
			{
				return _VOLTAGES;
			}
			set
			{
				_VOLTAGES = value;
				MarkColumnModified("VOLTAGES");
			}
		}
		string _VOLTAGES;

        [Column] 
		public long? COMPANY_ID 
		{ 
			get
			{
				return _COMPANY_ID;
			}
			set
			{
				_COMPANY_ID = value;
				MarkColumnModified("COMPANY_ID");
			}
		}
		long? _COMPANY_ID;

        [Column] 
		public long? OWNER2_ID 
		{ 
			get
			{
				return _OWNER2_ID;
			}
			set
			{
				_OWNER2_ID = value;
				MarkColumnModified("OWNER2_ID");
			}
		}
		long? _OWNER2_ID;

        [Column] 
		public long? ENTITY_ID 
		{ 
			get
			{
				return _ENTITY_ID;
			}
			set
			{
				_ENTITY_ID = value;
				MarkColumnModified("ENTITY_ID");
			}
		}
		long? _ENTITY_ID;

        [Column] 
		public long? REC_ID 
		{ 
			get
			{
				return _REC_ID;
			}
			set
			{
				_REC_ID = value;
				MarkColumnModified("REC_ID");
			}
		}
		long? _REC_ID;

        [Column] 
		public long? LAYER_ID 
		{ 
			get
			{
				return _LAYER_ID;
			}
			set
			{
				_LAYER_ID = value;
				MarkColumnModified("LAYER_ID");
			}
		}
		long? _LAYER_ID;

        [Column] 
		public string TYPE 
		{ 
			get
			{
				return _TYPE;
			}
			set
			{
				_TYPE = value;
				MarkColumnModified("TYPE");
			}
		}
		string _TYPE;

        [Column] 
		public string OWNER_TYPE 
		{ 
			get
			{
				return _OWNER_TYPE;
			}
			set
			{
				_OWNER_TYPE = value;
				MarkColumnModified("OWNER_TYPE");
			}
		}
		string _OWNER_TYPE;

        [Column] 
		public Microsoft.SqlServer.Types.SqlGeography geom 
		{ 
			get
			{
				return _geom;
			}
			set
			{
				_geom = value;
				MarkColumnModified("geom");
			}
		}
		Microsoft.SqlServer.Types.SqlGeography _geom;

	}
    
	[TableName("PowerPlants")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class PowerPlant : SpatialDB.Record<PowerPlant>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string PLANT_NAME 
		{ 
			get
			{
				return _PLANT_NAME;
			}
			set
			{
				_PLANT_NAME = value;
				MarkColumnModified("PLANT_NAME");
			}
		}
		string _PLANT_NAME;

        [Column] 
		public string NAME 
		{ 
			get
			{
				return _NAME;
			}
			set
			{
				_NAME = value;
				MarkColumnModified("NAME");
			}
		}
		string _NAME;

        [Column] 
		public double? CAP_MW 
		{ 
			get
			{
				return _CAP_MW;
			}
			set
			{
				_CAP_MW = value;
				MarkColumnModified("CAP_MW");
			}
		}
		double? _CAP_MW;

        [Column] 
		public double? CAP_MW1 
		{ 
			get
			{
				return _CAP_MW1;
			}
			set
			{
				_CAP_MW1 = value;
				MarkColumnModified("CAP_MW1");
			}
		}
		double? _CAP_MW1;

        [Column] 
		public double? CAP_MW2 
		{ 
			get
			{
				return _CAP_MW2;
			}
			set
			{
				_CAP_MW2 = value;
				MarkColumnModified("CAP_MW2");
			}
		}
		double? _CAP_MW2;

        [Column] 
		public double? CAP_MW3 
		{ 
			get
			{
				return _CAP_MW3;
			}
			set
			{
				_CAP_MW3 = value;
				MarkColumnModified("CAP_MW3");
			}
		}
		double? _CAP_MW3;

        [Column] 
		public string DESCRIPTIO 
		{ 
			get
			{
				return _DESCRIPTIO;
			}
			set
			{
				_DESCRIPTIO = value;
				MarkColumnModified("DESCRIPTIO");
			}
		}
		string _DESCRIPTIO;

        [Column] 
		public string CITY 
		{ 
			get
			{
				return _CITY;
			}
			set
			{
				_CITY = value;
				MarkColumnModified("CITY");
			}
		}
		string _CITY;

        [Column] 
		public string STATE 
		{ 
			get
			{
				return _STATE;
			}
			set
			{
				_STATE = value;
				MarkColumnModified("STATE");
			}
		}
		string _STATE;

        [Column] 
		public string COUNTY 
		{ 
			get
			{
				return _COUNTY;
			}
			set
			{
				_COUNTY = value;
				MarkColumnModified("COUNTY");
			}
		}
		string _COUNTY;

        [Column] 
		public string ZIP_CODE 
		{ 
			get
			{
				return _ZIP_CODE;
			}
			set
			{
				_ZIP_CODE = value;
				MarkColumnModified("ZIP_CODE");
			}
		}
		string _ZIP_CODE;

        [Column] 
		public string PROPOSED 
		{ 
			get
			{
				return _PROPOSED;
			}
			set
			{
				_PROPOSED = value;
				MarkColumnModified("PROPOSED");
			}
		}
		string _PROPOSED;

        [Column] 
		public string CODE 
		{ 
			get
			{
				return _CODE;
			}
			set
			{
				_CODE = value;
				MarkColumnModified("CODE");
			}
		}
		string _CODE;

        [Column] 
		public string SOURCE 
		{ 
			get
			{
				return _SOURCE;
			}
			set
			{
				_SOURCE = value;
				MarkColumnModified("SOURCE");
			}
		}
		string _SOURCE;

        [Column] 
		public long? PLANT_ID 
		{ 
			get
			{
				return _PLANT_ID;
			}
			set
			{
				_PLANT_ID = value;
				MarkColumnModified("PLANT_ID");
			}
		}
		long? _PLANT_ID;

        [Column] 
		public long? EIA_ID 
		{ 
			get
			{
				return _EIA_ID;
			}
			set
			{
				_EIA_ID = value;
				MarkColumnModified("EIA_ID");
			}
		}
		long? _EIA_ID;

        [Column] 
		public long? LAYER_ID 
		{ 
			get
			{
				return _LAYER_ID;
			}
			set
			{
				_LAYER_ID = value;
				MarkColumnModified("LAYER_ID");
			}
		}
		long? _LAYER_ID;

        [Column] 
		public long? REC_ID 
		{ 
			get
			{
				return _REC_ID;
			}
			set
			{
				_REC_ID = value;
				MarkColumnModified("REC_ID");
			}
		}
		long? _REC_ID;

        [Column] 
		public Microsoft.SqlServer.Types.SqlGeography geom 
		{ 
			get
			{
				return _geom;
			}
			set
			{
				_geom = value;
				MarkColumnModified("geom");
			}
		}
		Microsoft.SqlServer.Types.SqlGeography _geom;

	}
    
	[TableName("Substations")]
	[PrimaryKey("ID")]
	[ExplicitColumns]
    public partial class Substation : SpatialDB.Record<Substation>  
    {
        [Column] 
		public int ID 
		{ 
			get
			{
				return _ID;
			}
			set
			{
				_ID = value;
				MarkColumnModified("ID");
			}
		}
		int _ID;

        [Column] 
		public string NAME 
		{ 
			get
			{
				return _NAME;
			}
			set
			{
				_NAME = value;
				MarkColumnModified("NAME");
			}
		}
		string _NAME;

        [Column] 
		public string OWNER 
		{ 
			get
			{
				return _OWNER;
			}
			set
			{
				_OWNER = value;
				MarkColumnModified("OWNER");
			}
		}
		string _OWNER;

        [Column] 
		public string TAP 
		{ 
			get
			{
				return _TAP;
			}
			set
			{
				_TAP = value;
				MarkColumnModified("TAP");
			}
		}
		string _TAP;

        [Column] 
		public long? VOLTAGE_KV 
		{ 
			get
			{
				return _VOLTAGE_KV;
			}
			set
			{
				_VOLTAGE_KV = value;
				MarkColumnModified("VOLTAGE_KV");
			}
		}
		long? _VOLTAGE_KV;

        [Column] 
		public long? VOLTAGE_0 
		{ 
			get
			{
				return _VOLTAGE_0;
			}
			set
			{
				_VOLTAGE_0 = value;
				MarkColumnModified("VOLTAGE_0");
			}
		}
		long? _VOLTAGE_0;

        [Column] 
		public string PROPOSED 
		{ 
			get
			{
				return _PROPOSED;
			}
			set
			{
				_PROPOSED = value;
				MarkColumnModified("PROPOSED");
			}
		}
		string _PROPOSED;

        [Column] 
		public string COUNTY 
		{ 
			get
			{
				return _COUNTY;
			}
			set
			{
				_COUNTY = value;
				MarkColumnModified("COUNTY");
			}
		}
		string _COUNTY;

        [Column] 
		public string STATE 
		{ 
			get
			{
				return _STATE;
			}
			set
			{
				_STATE = value;
				MarkColumnModified("STATE");
			}
		}
		string _STATE;

        [Column] 
		public string CODE 
		{ 
			get
			{
				return _CODE;
			}
			set
			{
				_CODE = value;
				MarkColumnModified("CODE");
			}
		}
		string _CODE;

        [Column] 
		public string SOURCE 
		{ 
			get
			{
				return _SOURCE;
			}
			set
			{
				_SOURCE = value;
				MarkColumnModified("SOURCE");
			}
		}
		string _SOURCE;

        [Column] 
		public string OWNER2 
		{ 
			get
			{
				return _OWNER2;
			}
			set
			{
				_OWNER2 = value;
				MarkColumnModified("OWNER2");
			}
		}
		string _OWNER2;

        [Column] 
		public string NOTES 
		{ 
			get
			{
				return _NOTES;
			}
			set
			{
				_NOTES = value;
				MarkColumnModified("NOTES");
			}
		}
		string _NOTES;

        [Column] 
		public long? ENTITY_ID 
		{ 
			get
			{
				return _ENTITY_ID;
			}
			set
			{
				_ENTITY_ID = value;
				MarkColumnModified("ENTITY_ID");
			}
		}
		long? _ENTITY_ID;

        [Column] 
		public long? OWNER_ID 
		{ 
			get
			{
				return _OWNER_ID;
			}
			set
			{
				_OWNER_ID = value;
				MarkColumnModified("OWNER_ID");
			}
		}
		long? _OWNER_ID;

        [Column] 
		public long? OWNER2_ID 
		{ 
			get
			{
				return _OWNER2_ID;
			}
			set
			{
				_OWNER2_ID = value;
				MarkColumnModified("OWNER2_ID");
			}
		}
		long? _OWNER2_ID;

        [Column] 
		public long? LAYER_ID 
		{ 
			get
			{
				return _LAYER_ID;
			}
			set
			{
				_LAYER_ID = value;
				MarkColumnModified("LAYER_ID");
			}
		}
		long? _LAYER_ID;

        [Column] 
		public long? REC_ID 
		{ 
			get
			{
				return _REC_ID;
			}
			set
			{
				_REC_ID = value;
				MarkColumnModified("REC_ID");
			}
		}
		long? _REC_ID;

        [Column] 
		public Microsoft.SqlServer.Types.SqlGeography geom 
		{ 
			get
			{
				return _geom;
			}
			set
			{
				_geom = value;
				MarkColumnModified("geom");
			}
		}
		Microsoft.SqlServer.Types.SqlGeography _geom;

	}
}


